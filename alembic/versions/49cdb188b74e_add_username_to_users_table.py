"""Add username to users table

Revision ID: 49cdb188b74e
Revises: 0788d81289ef
Create Date: 2025-09-15 22:03:26.517962

"""
# from typing import Sequence, Union

# from alembic import op
# import sqlalchemy as sa


# # revision identifiers, used by Alembic.
# revision: str = '49cdb188b74e'
# down_revision: Union[str, Sequence[str], None] = '0788d81289ef'
# branch_labels: Union[str, Sequence[str], None] = None
# depends_on: Union[str, Sequence[str], None] = None


# def upgrade() -> None:
#     """Upgrade schema."""
#     # ### commands auto generated by Alembic - please adjust! ###
#     op.add_column('contacts', sa.Column('password', sa.String(length=255), nullable=True))
#     op.add_column('contacts', sa.Column('avatar', sa.String(length=255), nullable=True))
#     op.add_column('contacts', sa.Column('refresh_token', sa.String(length=255), nullable=True))
#     op.add_column('contacts', sa.Column('created_at', sa.DateTime(), nullable=True))
#     op.add_column('contacts', sa.Column('updated_at', sa.DateTime(), nullable=True))
#     op.add_column('contacts', sa.Column('role', sa.Enum('admin', 'moderator', 'user', name='role'), nullable=True))
#     op.add_column('contacts', sa.Column('confirmed', sa.Boolean(), nullable=True))
#     op.alter_column('contacts', 'user_id',
#                existing_type=sa.INTEGER(),
#                nullable=False)

#     op.add_column('users', sa.Column('username', sa.String(length=50), nullable=True))
#     op.add_column('users', sa.Column('avatar', sa.String(length=255), nullable=True))
#     op.add_column('users', sa.Column('refresh_token', sa.String(length=255), nullable=True))
#     op.add_column('users', sa.Column('created_at', sa.DateTime(), nullable=True))
#     op.add_column('users', sa.Column('updated_at', sa.DateTime(), nullable=True))
#     op.add_column('users', sa.Column('role', sa.Enum('admin', 'moderator', 'user', name='role'), nullable=True))
#     op.add_column('users', sa.Column('confirmed', sa.Boolean(), nullable=True))
#     op.alter_column('users', 'email',
#                existing_type=sa.VARCHAR(length=100),
#                type_=sa.String(length=150),
#                existing_nullable=False)
#     # ### end Alembic commands ###


# def downgrade() -> None:
#     """Downgrade schema."""
#     # ### commands auto generated by Alembic - please adjust! ###
#     op.alter_column('users', 'email',
#                existing_type=sa.String(length=150),
#                type_=sa.VARCHAR(length=100),
#                existing_nullable=False)
#     op.drop_column('users', 'confirmed')
#     op.drop_column('users', 'role')
#     op.drop_column('users', 'updated_at')
#     op.drop_column('users', 'created_at')
#     op.drop_column('users', 'refresh_token')
#     op.drop_column('users', 'avatar')
#     op.drop_column('users', 'username')
#     op.alter_column('contacts', 'user_id',
#                existing_type=sa.INTEGER(),
#                nullable=True)
#     op.drop_column('contacts', 'confirmed')
#     op.drop_column('contacts', 'role')
#     op.drop_column('contacts', 'updated_at')
#     op.drop_column('contacts', 'created_at')
#     op.drop_column('contacts', 'refresh_token')
#     op.drop_column('contacts', 'avatar')
#     op.drop_column('contacts', 'password')
#     # ### end Alembic commands ###
from typing import Sequence, Union
from alembic import op
import sqlalchemy as sa
from sqlalchemy.sql import table, column
from datetime import datetime

# revision identifiers
revision: str = '49cdb188b74e'
down_revision: Union[str, Sequence[str], None] = '0788d81289ef'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""

    role_enum = sa.Enum('admin', 'moderator', 'user', name='role')
    role_enum.create(op.get_bind())

    # Додаємо nullable=True, щоб уникнути помилок з NULL
    op.add_column('contacts', sa.Column('password', sa.String(length=255), nullable=True))
    op.add_column('contacts', sa.Column('avatar', sa.String(length=255), nullable=True))
    op.add_column('contacts', sa.Column('refresh_token', sa.String(length=255), nullable=True))
    op.add_column('contacts', sa.Column('created_at', sa.DateTime(), nullable=True))
    op.add_column('contacts', sa.Column('updated_at', sa.DateTime(), nullable=True))
    op.add_column('contacts', sa.Column('role', sa.Enum('admin', 'moderator', 'user', name='role'), nullable=True))
    op.add_column('contacts', sa.Column('confirmed', sa.Boolean(), nullable=True))

    op.add_column('users', sa.Column('username', sa.String(length=50), nullable=True))
    op.add_column('users', sa.Column('avatar', sa.String(length=255), nullable=True))
    op.add_column('users', sa.Column('refresh_token', sa.String(length=255), nullable=True))
    op.add_column('users', sa.Column('created_at', sa.DateTime(), nullable=True))
    op.add_column('users', sa.Column('updated_at', sa.DateTime(), nullable=True))
    op.add_column('users', sa.Column('role', sa.Enum('admin', 'moderator', 'user', name='role'), nullable=True))
    op.add_column('users', sa.Column('confirmed', sa.Boolean(), nullable=True))

    # Обов'язковий user_id
    op.alter_column('contacts', 'user_id',
                    existing_type=sa.INTEGER(),
                    nullable=False)

    # Оновлюємо всі записи, щоб уникнути помилки NOT NULL
    now = datetime.utcnow()

    contacts_table = table(
        'contacts',
        column('created_at', sa.DateTime()),
        column('updated_at', sa.DateTime())
    )

    users_table = table(
        'users',
        column('created_at', sa.DateTime()),
        column('updated_at', sa.DateTime()),
        column('username', sa.String(length=50))
    )

    op.execute(contacts_table.update().values({
        'created_at': now,
        'updated_at': now
    }))

    op.execute(users_table.update().values({
        'created_at': now,
        'updated_at': now,
        'username': 'default_username'
    }))

    # Тепер змінюємо nullable=False
    op.alter_column('contacts', 'created_at', nullable=False)
    op.alter_column('contacts', 'updated_at', nullable=False)
    op.alter_column('users', 'created_at', nullable=False)
    op.alter_column('users', 'updated_at', nullable=False)
    op.alter_column('users', 'username', nullable=False)

    # Змінюємо тип email
    op.alter_column('users', 'email',
                    existing_type=sa.VARCHAR(length=100),
                    type_=sa.String(length=150),
                    existing_nullable=False)
    
def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column('users', 'email',
               existing_type=sa.String(length=150),
               type_=sa.VARCHAR(length=100),
               existing_nullable=False)
    op.drop_column('users', 'confirmed')
    op.drop_column('users', 'role')
    op.drop_column('users', 'updated_at')
    op.drop_column('users', 'created_at')
    op.drop_column('users', 'refresh_token')
    op.drop_column('users', 'avatar')
    op.drop_column('users', 'username')
    op.alter_column('contacts', 'user_id',
               existing_type=sa.INTEGER(),
               nullable=True)
    op.drop_column('contacts', 'confirmed')
    op.drop_column('contacts', 'role')
    op.drop_column('contacts', 'updated_at')
    op.drop_column('contacts', 'created_at')
    op.drop_column('contacts', 'refresh_token')
    op.drop_column('contacts', 'avatar')
    op.drop_column('contacts', 'password')

    role_enum = sa.Enum('admin', 'moderator', 'user', name='role')
    role_enum.drop(op.get_bind(), checkfirst=True)
    # ### end Alembic commands ###
